//
// Let typescript know about our web components
//
declare namespace JSX {
  interface IntrinsicElements {
    "es-ribbon-section": any;
    "es-ribbon-column": any;
    "es-ribbon-button": any;
    "es-ribbon-button-small": any;
    "es-ribbon-button-split": any;
    "es-ribbon-dropdown": any;
    "es-ribbon-dropdown-item": any;
  }
}

//
// React component for icon based on inline svg
//
const PlusSquareO = () => <svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path d="M1344 800v64q0 14-9 23t-23 9h-352v352q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-352h-352q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h352v-352q0-14 9-23t23-9h64q14 0 23 9t9 23v352h352q14 0 23 9t9 23zm128 448v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zm128-832v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z"/></svg>

/**
 * Helper functions to avoid if (div === null) broiler plate.
 */
function claimRibbonThen(scaffold: ExtensionScaffoldApi, id: string, f: (div: HTMLDivElement) => void) {
  const div = scaffold.chrome.ribbonBar.claimRibbonPanel(id)
  if (div === null) {
    console.error('ribbon panel not found', id)
    return
  }
  f(div)
}
function claimRibbonWith(scaffold: ExtensionScaffoldApi, id: string, node: React.ReactNode) {
  claimRibbonThen(scaffold, id, div => {
    ReactDOM.render(<React.StrictMode>{node}</React.StrictMode>,div)
  })
}

/**
 * Function to claim several ribbon sections/panels.
 * 
 * @param scaffold 
 */
export function doClaimRibbon(scaffold: ExtensionScaffoldApi) {

// ...

  /**
   * Adds a center panel showing the code for this ribbon section
   * @param e 
   */
  async function showNewPlan(e: MouseEvent) {
    showCode(<FormatFileName fileName='RibbonButtonCode.txt'/>)
  }
  claimRibbonWith(scaffold, 'mp.area.plans',
    <es-ribbon-section label="Area Plans">
      <es-ribbon-button label="New Plan" onClick={showNewPlan}>
        <PlusSquareO />
      </es-ribbon-button>
      <es-ribbon-button label="Edit Plan">
        <svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path d="M888 1184l116-116-152-152-116 116v56h96v96h56zm440-720q-16-16-33 1l-350 350q-17 17-1 33t33-1l350-350q17-17 1-33zm80 594v190q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q63 0 117 25 15 7 18 23 3 17-9 29l-49 49q-14 14-32 8-23-6-45-6h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-126q0-13 9-22l64-64q15-15 35-7t20 29zm-96-738l288 288-672 672h-288v-288zm444 132l-92 92-288-288 92-92q28-28 68-28t68 28l152 152q28 28 28 68t-28 68z"/></svg>
      </es-ribbon-button>
      <es-ribbon-button label="Filter Plan">
        <svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path d="M1595 295q17 41-14 70l-493 493v742q0 42-39 59-13 5-25 5-27 0-45-19l-256-256q-19-19-19-45v-486l-493-493q-31-29-14-70 17-39 59-39h1280q42 0 59 39z"/></svg>
      </es-ribbon-button>
    </es-ribbon-section>
  )

// ...

}
